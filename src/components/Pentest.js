import React from 'react';

class Pentest extends React.Component {
    render() {
      return (
        <div className="article">
          <h1>Qu'est-ce qu'un Pentest ?</h1>
          <hr/>
          <p className="tabulation">Un <strong>Pen</strong>etration <strong>Test</strong> consiste à se mettre dans la peau d’un attaquant pour s’introduire dans le système d’information d'une entreprise et y réaliser des actions malveillantes (vol, espionnage, sabotage).  C'est donc un test d’intrusion qui vise à pénétrer le réseau ou une partie spécifique du réseau de manière offensive et plus ou moins réaliste pour détecter et remonter les vulnérabilités au client afin qu'il puisse les corriger. <br/><br/>Un pentester doit donc :</p>
          <ul>
              <li>Etablir un scénario de compromission possible en fonction des vulnérabilités trouvées</li>
              <li>Lister l'ensemble des informations sensibles ou critiques récupérables</li>
              <li>Détailler chaque vulnérabilité détectée au cours de ses tests</li>
              <li>Tester l’efficacité des systèmes de détection d’intrusion</li>
              <li>Rédiger un rapport et une présentation sur ses découvertes pour le client (phase de restitution)</li>
              <li>Donner des recommandations pour aider à la correction des vulnérabilités</li>
          </ul>

          <br/>
          <br/>

          <h2>Les différents modes de pentest :</h2>
          <br/>

          <ul>
              <li><strong>Black Box</strong> : le pentester adopte la position d'un attaquant externe n'ayant aucune information sur sa cible ou seulement des informations trouvées publiquement. Il doit donc chercher depuis l’extérieur comment s’introduire dans le système cible</li>
              <li><strong>White Box</strong> : Le pentester collabore avec le DSI, le RSSI et l’équipe technique du SI et a à disposition toutes les informations nécessaires à son travail (cartographie du réseau, adresses IP, comptes utilisateurs, etc).</li>
          </ul>

          <p className="tabulation">Il existe également le mode dit « <strong>Grey Box</strong> » entre les deux, dans lequel le pentester débute son test d’intrusion avec un certain nombre d’informations, en étant par exemple un utilisateur du SI (scénario d'un employé malveillant). Il débutera alors avec un compte utilisateur valide et l’accès à certaines applications métiers. </p><br/>

          <p className="tabulation">Outre ces différents contextes de départ, il existe également la notion de <strong>RedTeam</strong> visant à simuler ce que l’on pourrait décrire comme une APT (Advanced Persistent Threat). Dans cette approche, le test d’intrusion est souvent étendu sur une période beaucoup plus grande (plusieurs mois au lieu de qq jours/semaines). Cela reflète encore plus fidèlement le contexte d’une attaque externe dans laquelle les attaquants tendent de plus en plus à prendre leur temps pour étudier le SI ciblé et dissimuler leur présence. <br/><br/>
          
          Le principe d'une mission Redteam c'est que "Tous les moyens sont bons" (exception faite de la <a href="https://medium.com/@fhbro/rubber-hose-attack-d6d6cea76d64">Rubber Hose Attack</a> ^^') on peut donc facilement imaginer un scénario de phishing ou même d'intrusion physique dans les locaux pour la compromission initiale. 
          </p> 
          <p>Voir notre projet : Fabrication d'un implant/backdoor pour mission Redteam</p>

          <br/>
          <br/>
          <h2>Méthodologie classique d'un pentest web</h2>  
        </div>
      );
    }
  }

  export default Pentest;