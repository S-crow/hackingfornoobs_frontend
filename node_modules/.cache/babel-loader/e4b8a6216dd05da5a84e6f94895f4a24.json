{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\hackingfornoobs_frontend\\\\src\\\\components\\\\Pentest.js\";\nimport React from 'react';\n\nclass Pentest extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"article\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, \"Qu'est-ce qu'un pentest ?\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"tabulation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"Il s'agit d'un \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"pen\"), \"etration \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"test\"), \" qui consiste \\xE0 se mettre dans la peau d\\u2019un attaquant pour s\\u2019introduire dans le syst\\xE8me d\\u2019information d'une entreprise et y r\\xE9aliser des actions malveillantes (vol, espionnage, sabotage).  C'est donc un test d\\u2019intrusion qui vise \\xE0 hacker le r\\xE9seau ou une partie sp\\xE9cifique du r\\xE9seau de mani\\xE8re offensive et plus ou moins r\\xE9aliste pour d\\xE9tecter et remonter les vuln\\xE9rabilit\\xE9s au client afin qu'il puisse les corriger. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), \"Le job de pentester est donc de :\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Pr\\xE9senter un sc\\xE9nario de compromission en fonction des vuln\\xE9rabilit\\xE9s trouv\\xE9es\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Lister les d\\u2019informations sensibles ou critiques r\\xE9cup\\xE9rables\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"D\\xE9tailler chaque vuln\\xE9rabilit\\xE9 d\\xE9tect\\xE9e au cours des tests\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Tester l\\u2019efficacit\\xE9 des syst\\xE8mes de d\\xE9tection d\\u2019intrusion et la r\\xE9activit\\xE9 de l\\u2019\\xE9quipe de s\\xE9curit\\xE9 (blueteam) voire des utilisateurs (social engineering)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"R\\xE9diger un rapport et un powerpoint de pr\\xE9sentation pour le client (phase de restitution)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Donner des recommandations pour aider \\xE0 corriger les vuln\\xE9rabilit\\xE9s d\\xE9couvertes.\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Les diff\\xE9rents modes de pentest :\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"mode Black Box : le pentester se met dans la peau d\\u2019un attaquant externe n'ayant aucune information sur sa cible. Le pentester doit chercher depuis l\\u2019ext\\xE9rieur comment s\\u2019introduire dans le syst\\xE8me cible\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"mode White Box : Le pentesteur travail en proche collaboration avec le DSI, le RSSI et l\\u2019\\xE9quipe technique du syst\\xE8me d\\u2019information. On peut alors d\\xE9tecter des failles de s\\xE9curit\\xE9 de fa\\xE7on plus large que le mode Black Box n\\u2019aurait peut \\xEAtre pas permis de d\\xE9celer.\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Il existe \\xE9galement le mode dit \\xAB Grey Box \\xBB dans lequel le pentester d\\xE9bute son test d\\u2019intrusion avec un certain nombre d\\u2019informations, en \\xE9tant par exemple dans la peau d\\u2019un utilisateur du SI, sc\\xE9nario d'un employ\\xE9 malveillant par exemple. En tant que membre du service comptabilit\\xE9 par exemple, il d\\xE9butera avec un poste dans le LAN, un compte utilisateur valide, l\\u2019acc\\xE8s \\xE0 certaines applications m\\xE9tiers. En revanche il n\\u2019aura pas la permission de demander la version du serveur de mail \\xE0 la DSI, information que la DSI ne donnerait pas \\xE0 un utilisateur lambda. Ici, on peut donc simuler les m\\xE9faits que peut causer un utilisateur au syst\\xE8me de sa propre entreprise \\xE0 partir d\\u2019une position pr\\xE9cise dans le syst\\xE8me d\\u2019information. Le mode Grey Box ne se r\\xE9sume pas qu\\u2019\\xE0 ce contexte, on peut par exemple \\xE9galement imaginer un point de d\\xE9part qui serait la possession par l\\u2019attaquant du compte d\\u2019un utilisateur ayant quitt\\xE9 l\\u2019entreprise mais qui serait toujours valide dans le syst\\xE8me d\\u2019information cible (un compte VPN/AD par exemple). Outre ces diff\\xE9rents contextes de d\\xE9part, il existe \\xE9galement la notion de \\xAB Red Team \\xBB visant \\xE0 simuler ce que l\\u2019on pourrait commencer \\xE0 d\\xE9crire comme une APT (Advanced Persistent Threat). Dans ce contexte Red Team, le test d\\u2019intrusion est \\xE9tendu sur une p\\xE9riode beaucoup plus grande (plusieurs mois au lieu de quelques jours/semaines). Cela refl\\xE8te encore plus fid\\xE8lement le contexte d\\u2019une attaque externe dans laquelle les pirates tendent de plus en plus \\xE0 prendre leur temps pour \\xE9tudier le SI cibl\\xE9 et \\xE9galement pour dissimuler leur pr\\xE9sence.\"));\n  }\n\n}\n\nexport default Pentest;","map":{"version":3,"sources":["C:/Users/Nico/hackingfornoobs_frontend/src/components/Pentest.js"],"names":["React","Pentest","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AAClCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAzC,eAAsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtE,+dAA4f;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5f,EAAigB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjgB,sCAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uGADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sGANJ,CAJF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAbF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yOADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uTAFJ,CAfF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mwDApBF,CADF;AA+BD;;AAjCiC;;AAoCpC,eAAeF,OAAf","sourcesContent":["import React from 'react';\r\n\r\nclass Pentest extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"article\">\r\n          <h1>Qu'est-ce qu'un pentest ?</h1>\r\n          <hr/>\r\n          <p className=\"tabulation\">Il s'agit d'un <strong>pen</strong>etration <strong>test</strong> qui consiste à se mettre dans la peau d’un attaquant pour s’introduire dans le système d’information d'une entreprise et y réaliser des actions malveillantes (vol, espionnage, sabotage).  C'est donc un test d’intrusion qui vise à hacker le réseau ou une partie spécifique du réseau de manière offensive et plus ou moins réaliste pour détecter et remonter les vulnérabilités au client afin qu'il puisse les corriger. <br/><br/>Le job de pentester est donc de :</p>\r\n          <ul>\r\n              <li>Présenter un scénario de compromission en fonction des vulnérabilités trouvées</li>\r\n              <li>Lister les d’informations sensibles ou critiques récupérables</li>\r\n              <li>Détailler chaque vulnérabilité détectée au cours des tests</li>\r\n              <li>Tester l’efficacité des systèmes de détection d’intrusion et la réactivité de l’équipe de sécurité (blueteam) voire des utilisateurs (social engineering)</li>\r\n              <li>Rédiger un rapport et un powerpoint de présentation pour le client (phase de restitution)</li>\r\n              <li>Donner des recommandations pour aider à corriger les vulnérabilités découvertes.</li>\r\n          </ul>\r\n\r\n          <h2>Les différents modes de pentest :</h2>\r\n\r\n          <ul>\r\n              <li>mode Black Box : le pentester se met dans la peau d’un attaquant externe n'ayant aucune information sur sa cible. Le pentester doit chercher depuis l’extérieur comment s’introduire dans le système cible</li>\r\n              <li>mode White Box : Le pentesteur travail en proche collaboration avec le DSI, le RSSI et l’équipe technique du système d’information. On peut alors détecter des failles de sécurité de façon plus large que le mode Black Box n’aurait peut être pas permis de déceler.</li>\r\n          </ul>\r\n\r\n          <p>Il existe également le mode dit « Grey Box » dans lequel le pentester débute son test d’intrusion avec un certain nombre d’informations, en étant par exemple dans la peau d’un utilisateur du SI, scénario d'un employé malveillant par exemple. En tant que membre du service comptabilité par exemple, il débutera avec un poste dans le LAN, un compte utilisateur valide, l’accès à certaines applications métiers. En revanche il n’aura pas la permission de demander la version du serveur de mail à la DSI, information que la DSI ne donnerait pas à un utilisateur lambda.\r\n\r\n          Ici, on peut donc simuler les méfaits que peut causer un utilisateur au système de sa propre entreprise à partir d’une position précise dans le système d’information. Le mode Grey Box ne se résume pas qu’à ce contexte, on peut par exemple également imaginer un point de départ qui serait la possession par l’attaquant du compte d’un utilisateur ayant quitté l’entreprise mais qui serait toujours valide dans le système d’information cible (un compte VPN/AD par exemple).\r\n\r\n          Outre ces différents contextes de départ, il existe également la notion de « Red Team » visant à simuler ce que l’on pourrait commencer à décrire comme une APT (Advanced Persistent Threat). Dans ce contexte Red Team, le test d’intrusion est étendu sur une période beaucoup plus grande (plusieurs mois au lieu de quelques jours/semaines). Cela reflète encore plus fidèlement le contexte d’une attaque externe dans laquelle les pirates tendent de plus en plus à prendre leur temps pour étudier le SI ciblé et également pour dissimuler leur présence.</p>\r\n\r\n\r\n\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Pentest;"]},"metadata":{},"sourceType":"module"}