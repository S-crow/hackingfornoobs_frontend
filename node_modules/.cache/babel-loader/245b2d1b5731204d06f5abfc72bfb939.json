{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Nico/hackingfornoobs_frontend/src/components/Pentest.js\";\nimport React from 'react';\nimport Pentester from \"../img/pentester.jpg\";\nimport Diagram from \"../img/Diagram.png\";\n\nclass Pentest extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"article\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"Qu'est-ce qu'un Pentest ?\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"tabulation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Un pentest (contraction de \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Pen\"), \"etration \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Test\"), \" = test d'intrusion) consiste \\xE0 se mettre dans la peau d\\u2019un attaquant qui tente de s\\u2019introduire dans le SI d'une entreprise pour y r\\xE9aliser des actions malveillantes. C'est un test d\\u2019intrusion qui vise \\xE0 p\\xE9n\\xE9trer un r\\xE9seau de mani\\xE8re offensive, et plus ou moins r\\xE9aliste, pour remonter les vuln\\xE9rabilit\\xE9s au client afin qu'il les corrige. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), \"La mission d'un pentester est donc de :\"), React.createElement(\"img\", {\n      id: \"pentester_img\",\n      src: Pentester,\n      alt: \"Pentester\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Etablir un sc\\xE9nario de compromission en fonction des vuln\\xE9rabilit\\xE9s trouv\\xE9es\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Lister l'ensemble des informations sensibles r\\xE9cup\\xE9rables\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"D\\xE9tailler chaque vuln\\xE9rabilit\\xE9 d\\xE9tect\\xE9e au cours de ses tests\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Tester l\\u2019efficacit\\xE9 des syst\\xE8mes de d\\xE9tection d\\u2019intrusion (IDS/IPS)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Pr\\xE9senter un rapport et une restitution de ses d\\xE9couvertes au client\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Proposer des recommandations pour corriger les vuln\\xE9rabilit\\xE9s\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Les diff\\xE9rents modes de pentest :\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Black Box\"), \" : position d'un attaquant externe n'ayant aucune information sur sa cible ou seulement des informations trouv\\xE9es publiquement.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"White Box\"), \" : toutes les infos (plan r\\xE9seau, adresses IP, comptes utilisateurs, ...) sont disponibles.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Grey Box\"), \" : certaines infos, comme un compte utilisateur valide et l\\u2019acc\\xE8s \\xE0 des applications m\\xE9tiers (sc\\xE9nario d'un employ\\xE9 malveillant). \")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"tabulation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Il existe \\xE9galement des missions \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"RedTeam\"), \" visant \\xE0 simuler ce que l\\u2019on pourrait d\\xE9crire comme une APT (Advanced Persistent Threat) o\\xF9 \\\"Tous les moyens sont bons\\\" (exception faite de la \", React.createElement(\"a\", {\n      href: \"https://medium.com/@fhbro/rubber-hose-attack-d6d6cea76d64\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Rubber Hose Attack\"), \" ^^') on peut donc facilement imaginer un sc\\xE9nario de phishing des employ\\xE9s ou m\\xEAme d'intrusion physique dans les locaux pour la compromission initiale.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Voir le projet\"), \" : Fabrication d'un implant/backdoor dans la section \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Redteam\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"M\\xE9thodologie classique d'un pentest web\"), React.createElement(\"img\", {\n      id: \"diagram_img\",\n      src: Diagram,\n      alt: \"m\\xE9thodo pentest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Pentest;","map":{"version":3,"sources":["/mnt/c/Users/Nico/hackingfornoobs_frontend/src/components/Pentest.js"],"names":["React","Pentester","Diagram","Pentest","Component","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Pentester from \"../img/pentester.jpg\"\r\nimport Diagram from \"../img/Diagram.png\"\r\n\r\nclass Pentest extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"article\">\r\n          <h1>Qu'est-ce qu'un Pentest ?</h1>\r\n          <hr/>\r\n          <p className=\"tabulation\">Un pentest (contraction de <strong>Pen</strong>etration <strong>Test</strong> = test d'intrusion) consiste à se mettre dans la peau d’un attaquant qui tente de s’introduire dans le SI d'une entreprise pour y réaliser des actions malveillantes. C'est un test d’intrusion qui vise à pénétrer un réseau de manière offensive, et plus ou moins réaliste, pour remonter les vulnérabilités au client afin qu'il les corrige. <br/><br/>La mission d'un pentester est donc de :</p>\r\n\r\n          <img id=\"pentester_img\" src={Pentester} alt=\"Pentester\"/>\r\n\r\n          <ul>\r\n              <li>Etablir un scénario de compromission en fonction des vulnérabilités trouvées</li>\r\n              <li>Lister l'ensemble des informations sensibles récupérables</li>\r\n              <li>Détailler chaque vulnérabilité détectée au cours de ses tests</li>\r\n              <li>Tester l’efficacité des systèmes de détection d’intrusion (IDS/IPS)</li>\r\n              <li>Présenter un rapport et une restitution de ses découvertes au client</li>\r\n              <li>Proposer des recommandations pour corriger les vulnérabilités</li>\r\n          </ul>\r\n\r\n          <br/>\r\n          <hr/>\r\n          <br/>\r\n\r\n          <h2>Les différents modes de pentest :</h2>\r\n          <br/>\r\n\r\n          <ul>\r\n              <li><strong>Black Box</strong> : position d'un attaquant externe n'ayant aucune information sur sa cible ou seulement des informations trouvées publiquement.</li>\r\n              <li><strong>White Box</strong> : toutes les infos (plan réseau, adresses IP, comptes utilisateurs, ...) sont disponibles.</li>\r\n              <li><strong>Grey Box</strong> : certaines infos, comme un compte utilisateur valide et l’accès à des applications métiers (scénario d'un employé malveillant). </li>\r\n          </ul>\r\n\r\n          <br/>\r\n\r\n          <p className=\"tabulation\">Il existe également des missions <strong>RedTeam</strong> visant à simuler ce que l’on pourrait décrire comme une APT (Advanced Persistent Threat) où \"Tous les moyens sont bons\" (exception faite de la <a href=\"https://medium.com/@fhbro/rubber-hose-attack-d6d6cea76d64\">Rubber Hose Attack</a> ^^') on peut donc facilement imaginer un scénario de phishing des employés ou même d'intrusion physique dans les locaux pour la compromission initiale. \r\n          </p> \r\n          <p><u>Voir le projet</u> : Fabrication d'un implant/backdoor dans la section <strong>Redteam</strong></p>\r\n\r\n          <br/>\r\n          <hr/>\r\n          <br/>\r\n\r\n          <h2>Méthodologie classique d'un pentest web</h2>  \r\n\r\n          <img id=\"diagram_img\" src={Diagram} alt=\"méthodo pentest\"/>\r\n\r\n          <br/>\r\n          <hr/>\r\n          <br/>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Pentest;"]},"metadata":{},"sourceType":"module"}