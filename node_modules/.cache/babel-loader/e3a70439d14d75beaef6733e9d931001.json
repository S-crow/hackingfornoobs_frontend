{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Nico/hackingfornoobs_frontend/src/components/Ntlm.js\";\nimport React from 'react';\nimport SchemaNTLM from \"../img/ntlm_schema.png\";\n\nclass Ntlm extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"article\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Le protocole NTLM\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Les formats de Hash\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"LM\"), \" : hash des anciennes versions de Windows, obsol\\xE8te (s\\xE9curit\\xE9 tr\\xE8s faible).\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"NTLM\"), \" : hash des versions r\\xE9centes de Windows, (robuste).\")), React.createElement(\"p\", {\n      className: \"tabulation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Ces hash sont stock\\xE9s dans la base \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"SAM\"), \" pour les comptes locaux ou dans la m\\xE9moire du processus \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"lsass\"), \" et dans la base \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"NTDS.dit\"), \" de l'AD pour les comptes de domaine.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), \"Il est possible de les bruteforcer pour obtenir des comptes ou de s'en servir dans une attaque Pass-The-Hash pour augmenter ses acc\\xE8s.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Les protocoles d'authentification (Challenge/Response)\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Protocole \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"LM\"), \" : associ\\xE9 au hash LM et au chiffrement DES, obsol\\xE8te (s\\xE9curit\\xE9 tr\\xE8s faible)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Protocole \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"NTLMv1\"), \" : similaire mais associ\\xE9 au hash NTLM (obsol\\xE8te \\xE9galement, faible)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Procole \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"NTLMv2\"), \" : version la plus r\\xE9cente (robuste), associ\\xE9 au chiffrement HMAC-DES\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"L'authentification NTLM s'effectue suivant 3 grandes \\xE9tapes :\"), React.createElement(\"img\", {\n      src: SchemaNTLM,\n      alt: \"schema NTLM\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Le client envoie au serveur une demande d'authentification avec les versions du protocole NTLM qu'il accepte. (NTLMSSP_Negociate)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Le serveur r\\xE9pond au client avec les version du protocole NTLM accept\\xE9es et un 'challenge' \\xE0 r\\xE9soudre. (NTLMSSP_Challenge)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"le client chiffre le challenge avec le hash du mot de passe de l'utilisateur et envoie sa 'response' au serveur. (NTLMSSP_Auth)\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Dans le cas d'une authentification avec un compte de domaine, le serveur enverra ces infos au DC qui validera ou non l'authentification. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), \"L'authentification NTLM peut \\xEAtre encapsul\\xE9e dans plusieurs protocoles : SMB, LDAP, HTTP(S), IMAP, SMTP ou MS-SQL.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"L'attaque du relai NTLM \"));\n  }\n\n}\n\nexport default Ntlm;","map":{"version":3,"sources":["/mnt/c/Users/Nico/hackingfornoobs_frontend/src/components/Ntlm.js"],"names":["React","SchemaNTLM","Ntlm","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAC/BC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ,4FADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,4DAFJ,CALF,EASE;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA7D,kEAA0I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1I,uBAAiL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAjL,2CAA+O;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/O,EAAoP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApP,8IATF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAfF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAd,gGADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd,iFAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ,gFAHJ,CAjBF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAzBF,EA2BE;AAAK,MAAA,GAAG,EAAEH,UAAV;AAAsB,MAAA,GAAG,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gJAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIAHJ,CA7BF,EAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oJAA4I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5I,EAAiJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjJ,6HAlCF,EAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArCF,EAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAvCF,CADF;AA2CD;;AA7C8B;;AAgDjC,eAAeC,IAAf","sourcesContent":["import React from 'react';\r\nimport SchemaNTLM from \"../img/ntlm_schema.png\"\r\n\r\nclass Ntlm extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"article\">\r\n          <h1>Le protocole NTLM</h1>\r\n          <hr/>\r\n\r\n          <h4>Les formats de Hash</h4>\r\n          <ul>\r\n              <li><strong>LM</strong> : hash des anciennes versions de Windows, obsolète (sécurité très faible).</li>\r\n              <li><strong>NTLM</strong> : hash des versions récentes de Windows, (robuste).</li>\r\n          </ul>\r\n          <p className=\"tabulation\">Ces hash sont stockés dans la base <strong>SAM</strong> pour les comptes locaux ou dans la mémoire du processus <strong>lsass</strong> et dans la base <strong>NTDS.dit</strong> de l'AD pour les comptes de domaine.<br/><br/>\r\n\r\n          Il est possible de les bruteforcer pour obtenir des comptes ou de s'en servir dans une attaque Pass-The-Hash pour augmenter ses accès.</p>\r\n\r\n          <br/>\r\n          \r\n          <h4>Les protocoles d'authentification (Challenge/Response)</h4>\r\n\r\n          <ul>\r\n              <li>Protocole <strong>LM</strong> : associé au hash LM et au chiffrement DES, obsolète (sécurité très faible)</li>\r\n              <li>Protocole <strong>NTLMv1</strong> : similaire mais associé au hash NTLM (obsolète également, faible)</li>\r\n              <li>Procole <strong>NTLMv2</strong> : version la plus récente (robuste), associé au chiffrement HMAC-DES</li>\r\n          </ul>\r\n\r\n          <br/>\r\n\r\n          <strong>L'authentification NTLM s'effectue suivant 3 grandes étapes :</strong>\r\n\r\n          <img src={SchemaNTLM} alt=\"schema NTLM\"/>\r\n\r\n          <ol>\r\n              <li>Le client envoie au serveur une demande d'authentification avec les versions du protocole NTLM qu'il accepte. (NTLMSSP_Negociate)</li>\r\n              <li>Le serveur répond au client avec les version du protocole NTLM acceptées et un 'challenge' à résoudre. (NTLMSSP_Challenge)</li>\r\n              <li>le client chiffre le challenge avec le hash du mot de passe de l'utilisateur et envoie sa 'response' au serveur. (NTLMSSP_Auth)</li>\r\n          </ol>\r\n          <p>Dans le cas d'une authentification avec un compte de domaine, le serveur enverra ces infos au DC qui validera ou non l'authentification. <br/><br/>\r\n          L'authentification NTLM peut être encapsulée dans plusieurs protocoles : SMB, LDAP, HTTP(S), IMAP, SMTP ou MS-SQL.</p>\r\n\r\n          <br/>\r\n          \r\n          <h2>L'attaque du relai NTLM </h2>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Ntlm;"]},"metadata":{},"sourceType":"module"}